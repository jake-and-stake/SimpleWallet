{
	"id": "ef66659bb5cf3cfb22d49f6939181c37",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"MappingsStructExample.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.5.13;\n\ncontract MappingsStructExample {\n\n    struct Payment {\n        uint amount;\n        uint timestamps;\n    }\n\n    struct Balance {\n        uint totalBalance;\n        uint numPayments;\n        mapping(uint => Payment) payments;\n    }\n\n    mapping(address => Balance) public balanceReceived;\n\n    function getBalance() public view returns(uint) {\n        return address(this).balance;\n    }\n\n    function sendMoney() public payable {\n        balanceReceived[msg.sender].totalBalance += msg.value;\n        Payment memory payment = Payment(msg.value, now);\n        \n    }\n\n    function withdrawMoney(address payable _to, uint _amount) public {\n        require(balanceReceived[msg.sender].totalBalance >=  _amount, \"not enough funds\");\n        balanceReceived[msg.sender].totalBalance -= _amount;\n        _to.transfer(_amount);\n    }\n\n    function withdrawAllMoney(address payable _to) public {\n        uint balanceToSend = balanceReceived[msg.sender].totalBalance;\n        balanceReceived[msg.sender].totalBalance = 0;\n        _to.transfer(balanceToSend);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"MappingsStructExample.sol": {
				"MappingsStructExample": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceReceived",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "numPayments",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "sendMoney",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrawAllMoney",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"MappingsStructExample.sol\":59:1116  contract MappingsStructExample {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"MappingsStructExample.sol\":59:1116  contract MappingsStructExample {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MappingsStructExample.sol\":59:1116  contract MappingsStructExample {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0adec93c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xcbedbf5a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xd18a42e1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf274c897\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"MappingsStructExample.sol\":891:1114  function withdrawAllMoney(address payable _to) public {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"MappingsStructExample.sol\":891:1114  function withdrawAllMoney(address payable _to) public {... */\n      pop\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \"MappingsStructExample.sol\":891:1114  function withdrawAllMoney(address payable _to) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      stop\n        /* \"MappingsStructExample.sol\":352:445  function getBalance() public view returns(uint) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"MappingsStructExample.sol\":352:445  function getBalance() public view returns(uint) {... */\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MappingsStructExample.sol\":451:624  function sendMoney() public payable {... */\n    tag_4:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      stop\n        /* \"MappingsStructExample.sol\":295:345  mapping(address => Balance) public balanceReceived */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"MappingsStructExample.sol\":295:345  mapping(address => Balance) public balanceReceived */\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"MappingsStructExample.sol\":295:345  mapping(address => Balance) public balanceReceived */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"MappingsStructExample.sol\":630:885  function withdrawMoney(address payable _to, uint _amount) public {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"MappingsStructExample.sol\":630:885  function withdrawMoney(address payable _to, uint _amount) public {... */\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_22:\n        /* \"MappingsStructExample.sol\":630:885  function withdrawMoney(address payable _to, uint _amount) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"MappingsStructExample.sol\":891:1114  function withdrawAllMoney(address payable _to) public {... */\n    tag_10:\n        /* \"MappingsStructExample.sol\":955:973  uint balanceToSend */\n      0x00\n        /* \"MappingsStructExample.sol\":976:991  balanceReceived */\n      dup1\n        /* \"MappingsStructExample.sol\":976:1003  balanceReceived[msg.sender] */\n      0x00\n        /* \"MappingsStructExample.sol\":992:1002  msg.sender */\n      caller\n        /* \"MappingsStructExample.sol\":976:1003  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingsStructExample.sol\":976:1016  balanceReceived[msg.sender].totalBalance */\n      0x00\n      add\n      sload\n        /* \"MappingsStructExample.sol\":955:1016  uint balanceToSend = balanceReceived[msg.sender].totalBalance */\n      swap1\n      pop\n        /* \"MappingsStructExample.sol\":1069:1070  0 */\n      0x00\n        /* \"MappingsStructExample.sol\":1026:1041  balanceReceived */\n      dup1\n        /* \"MappingsStructExample.sol\":1026:1053  balanceReceived[msg.sender] */\n      0x00\n        /* \"MappingsStructExample.sol\":1042:1052  msg.sender */\n      caller\n        /* \"MappingsStructExample.sol\":1026:1053  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingsStructExample.sol\":1026:1066  balanceReceived[msg.sender].totalBalance */\n      0x00\n      add\n        /* \"MappingsStructExample.sol\":1026:1070  balanceReceived[msg.sender].totalBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MappingsStructExample.sol\":1080:1083  _to */\n      dup2\n        /* \"MappingsStructExample.sol\":1080:1092  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MappingsStructExample.sol\":1080:1107  _to.transfer(balanceToSend) */\n      0x08fc\n        /* \"MappingsStructExample.sol\":1093:1106  balanceToSend */\n      dup3\n        /* \"MappingsStructExample.sol\":1080:1107  _to.transfer(balanceToSend) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"MappingsStructExample.sol\":1080:1107  _to.transfer(balanceToSend) */\n      pop\n        /* \"MappingsStructExample.sol\":891:1114  function withdrawAllMoney(address payable _to) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MappingsStructExample.sol\":352:445  function getBalance() public view returns(uint) {... */\n    tag_13:\n        /* \"MappingsStructExample.sol\":394:398  uint */\n      0x00\n        /* \"MappingsStructExample.sol\":417:438  address(this).balance */\n      selfbalance\n        /* \"MappingsStructExample.sol\":410:438  return address(this).balance */\n      swap1\n      pop\n        /* \"MappingsStructExample.sol\":352:445  function getBalance() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"MappingsStructExample.sol\":451:624  function sendMoney() public payable {... */\n    tag_15:\n        /* \"MappingsStructExample.sol\":541:550  msg.value */\n      callvalue\n        /* \"MappingsStructExample.sol\":497:512  balanceReceived */\n      0x00\n        /* \"MappingsStructExample.sol\":497:524  balanceReceived[msg.sender] */\n      dup1\n        /* \"MappingsStructExample.sol\":513:523  msg.sender */\n      caller\n        /* \"MappingsStructExample.sol\":497:524  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingsStructExample.sol\":497:537  balanceReceived[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"MappingsStructExample.sol\":497:550  balanceReceived[msg.sender].totalBalance += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MappingsStructExample.sol\":560:582  Payment memory payment */\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"MappingsStructExample.sol\":585:608  Payment(msg.value, now) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"MappingsStructExample.sol\":593:602  msg.value */\n      callvalue\n        /* \"MappingsStructExample.sol\":585:608  Payment(msg.value, now) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"MappingsStructExample.sol\":604:607  now */\n      timestamp\n        /* \"MappingsStructExample.sol\":585:608  Payment(msg.value, now) */\n      dup2\n      mstore\n      pop\n        /* \"MappingsStructExample.sol\":560:608  Payment memory payment = Payment(msg.value, now) */\n      swap1\n      pop\n        /* \"MappingsStructExample.sol\":451:624  function sendMoney() public payable {... */\n      pop\n      jump\t// out\n        /* \"MappingsStructExample.sol\":295:345  mapping(address => Balance) public balanceReceived */\n    tag_19:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"MappingsStructExample.sol\":630:885  function withdrawMoney(address payable _to, uint _amount) public {... */\n    tag_23:\n        /* \"MappingsStructExample.sol\":758:765  _amount */\n      dup1\n        /* \"MappingsStructExample.sol\":713:728  balanceReceived */\n      0x00\n        /* \"MappingsStructExample.sol\":713:740  balanceReceived[msg.sender] */\n      dup1\n        /* \"MappingsStructExample.sol\":729:739  msg.sender */\n      caller\n        /* \"MappingsStructExample.sol\":713:740  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingsStructExample.sol\":713:753  balanceReceived[msg.sender].totalBalance */\n      0x00\n      add\n      sload\n        /* \"MappingsStructExample.sol\":713:765  balanceReceived[msg.sender].totalBalance >=  _amount */\n      lt\n      iszero\n        /* \"MappingsStructExample.sol\":705:786  require(balanceReceived[msg.sender].totalBalance >=  _amount, \"not enough funds\") */\n      tag_31\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6e6f7420656e6f7567682066756e647300000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_31:\n        /* \"MappingsStructExample.sol\":840:847  _amount */\n      dup1\n        /* \"MappingsStructExample.sol\":796:811  balanceReceived */\n      0x00\n        /* \"MappingsStructExample.sol\":796:823  balanceReceived[msg.sender] */\n      dup1\n        /* \"MappingsStructExample.sol\":812:822  msg.sender */\n      caller\n        /* \"MappingsStructExample.sol\":796:823  balanceReceived[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"MappingsStructExample.sol\":796:836  balanceReceived[msg.sender].totalBalance */\n      0x00\n      add\n      0x00\n        /* \"MappingsStructExample.sol\":796:847  balanceReceived[msg.sender].totalBalance -= _amount */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"MappingsStructExample.sol\":857:860  _to */\n      dup2\n        /* \"MappingsStructExample.sol\":857:869  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"MappingsStructExample.sol\":857:878  _to.transfer(_amount) */\n      0x08fc\n        /* \"MappingsStructExample.sol\":870:877  _amount */\n      dup3\n        /* \"MappingsStructExample.sol\":857:878  _to.transfer(_amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"MappingsStructExample.sol\":857:878  _to.transfer(_amount) */\n      pop\n        /* \"MappingsStructExample.sol\":630:885  function withdrawMoney(address payable _to, uint _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"MappingsStructExample.sol\":59:1116  contract MappingsStructExample {... */\n    tag_29:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158200791ae542aa06564e297d9076891bc0c97f1bdd66d4b5ca4062267050e6f2bc364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506104b1806100206000396000f3fe60806040526004361061004a5760003560e01c80630adec93c1461004f57806312065fe0146100a0578063cbedbf5a146100cb578063d18a42e1146100d5578063f274c89714610141575b600080fd5b34801561005b57600080fd5b5061009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019c565b005b3480156100ac57600080fd5b506100b5610274565b6040518082815260200191505060405180910390f35b6100d361027c565b005b3480156100e157600080fd5b50610124600480360360208110156100f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ed565b604051808381526020018281526020019250505060405180910390f35b34801561014d57600080fd5b5061019a6004803603604081101561016457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610311565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561026f573d6000803e3d6000fd5b505050565b600047905090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506102d3610462565b604051806040016040528034815260200142815250905050565b60006020528060005260406000206000915090508060000154908060010154905082565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561045d573d6000803e3d6000fd5b505050565b60405180604001604052806000815260200160008152509056fea265627a7a723158200791ae542aa06564e297d9076891bc0c97f1bdd66d4b5ca4062267050e6f2bc364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B1 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADEC93C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCBEDBF5A EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x141 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2D3 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SMOD SWAP2 0xAE SLOAD 0x2A LOG0 PUSH6 0x64E297D90768 SWAP2 0xBC 0xC SWAP8 CALL 0xBD 0xD6 PUSH14 0x4B5CA4062267050E6F2BC364736F PUSH13 0x63430005110032000000000000 ",
							"sourceMap": "59:1057:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;59:1057:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80630adec93c1461004f57806312065fe0146100a0578063cbedbf5a146100cb578063d18a42e1146100d5578063f274c89714610141575b600080fd5b34801561005b57600080fd5b5061009e6004803603602081101561007257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061019c565b005b3480156100ac57600080fd5b506100b5610274565b6040518082815260200191505060405180910390f35b6100d361027c565b005b3480156100e157600080fd5b50610124600480360360208110156100f857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ed565b604051808381526020018281526020019250505060405180910390f35b34801561014d57600080fd5b5061019a6004803603604081101561016457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610311565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154905060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561026f573d6000803e3d6000fd5b505050565b600047905090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825401925050819055506102d3610462565b604051806040016040528034815260200142815250905050565b60006020528060005260406000206000915090508060000154908060010154905082565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f6e6f7420656e6f7567682066756e64730000000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825403925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561045d573d6000803e3d6000fd5b505050565b60405180604001604052806000815260200160008152509056fea265627a7a723158200791ae542aa06564e297d9076891bc0c97f1bdd66d4b5ca4062267050e6f2bc364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xADEC93C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xCBEDBF5A EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xD18A42E1 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF274C897 EQ PUSH2 0x141 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD3 PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x311 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x26F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2D3 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLVALUE DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E6F7420656E6F7567682066756E647300000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SMOD SWAP2 0xAE SLOAD 0x2A LOG0 PUSH6 0x64E297D90768 SWAP2 0xBC 0xC SWAP8 CALL 0xBD 0xD6 PUSH14 0x4B5CA4062267050E6F2BC364736F PUSH13 0x63430005110032000000000000 ",
							"sourceMap": "59:1057:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;891:223;;8:9:-1;5:2;;;30:1;27;20:12;5:2;891:223:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;891:223:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;352:93;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:93:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;451:173;;;:::i;:::-;;295:50;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:50:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;295:50:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;630:255;;8:9:-1;5:2;;;30:1;27;20:12;5:2;630:255:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;630:255:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;891:223;955:18;976:15;:27;992:10;976:27;;;;;;;;;;;;;;;:40;;;955:61;;1069:1;1026:15;:27;1042:10;1026:27;;;;;;;;;;;;;;;:40;;:44;;;;1080:3;:12;;:27;1093:13;1080:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1080:27:0;891:223;;:::o;352:93::-;394:4;417:21;410:28;;352:93;:::o;451:173::-;541:9;497:15;:27;513:10;497:27;;;;;;;;;;;;;;;:40;;;:53;;;;;;;;;;;560:22;;:::i;:::-;585:23;;;;;;;;593:9;585:23;;;;604:3;585:23;;;560:48;;451:173;:::o;295:50::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;630:255::-;758:7;713:15;:27;729:10;713:27;;;;;;;;;;;;;;;:40;;;:52;;705:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;840:7;796:15;:27;812:10;796:27;;;;;;;;;;;;;;;:40;;;:51;;;;;;;;;;;857:3;:12;;:21;870:7;857:21;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;857:21:0;630:255;;:::o;59:1057::-;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "240200",
								"executionCost": "281",
								"totalCost": "240481"
							},
							"external": {
								"balanceReceived(address)": "2059",
								"getBalance()": "215",
								"sendMoney()": "21216",
								"withdrawAllMoney(address)": "infinite",
								"withdrawMoney(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 1116,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "MSTORE"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "POP"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "DUP1"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "CODECOPY"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 59,
									"end": 1116,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158200791ae542aa06564e297d9076891bc0c97f1bdd66d4b5ca4062267050e6f2bc364736f6c63430005110032",
									".code": [
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "LT"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "SHR"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "ADEC93C"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "CBEDBF5A"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "D18A42E1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "F274C897"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "EQ"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPI"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "REVERT"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "JUMPDEST"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "DUP1"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "DUP2"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "ADD"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "DUP1"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "DUP1"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "AND"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "ADD"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "SWAP3"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "SWAP2"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "JUMPDEST"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "STOP"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "MLOAD"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "DUP3"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "DUP2"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "MSTORE"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "ADD"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "MLOAD"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "DUP1"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "SWAP2"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "SUB"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "RETURN"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "JUMPDEST"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "JUMPDEST"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "STOP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "AND"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP3"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP4"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP3"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP2"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP3"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SUB"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "RETURN"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "DUP2"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "AND"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP3"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "DUP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "ADD"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP3"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP2"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "SWAP1"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "STOP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "JUMPDEST"
										},
										{
											"begin": 955,
											"end": 973,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 976,
											"end": 991,
											"name": "DUP1"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1002,
											"name": "CALLER"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "AND"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "AND"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "MSTORE"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "ADD"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "SWAP1"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "DUP2"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "MSTORE"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "ADD"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1003,
											"name": "KECCAK256"
										},
										{
											"begin": 976,
											"end": 1016,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1016,
											"name": "ADD"
										},
										{
											"begin": 976,
											"end": 1016,
											"name": "SLOAD"
										},
										{
											"begin": 955,
											"end": 1016,
											"name": "SWAP1"
										},
										{
											"begin": 955,
											"end": 1016,
											"name": "POP"
										},
										{
											"begin": 1069,
											"end": 1070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1041,
											"name": "DUP1"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1052,
											"name": "CALLER"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "AND"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "MSTORE"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "ADD"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "SWAP1"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "DUP2"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "MSTORE"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "ADD"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1053,
											"name": "KECCAK256"
										},
										{
											"begin": 1026,
											"end": 1066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1066,
											"name": "ADD"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "DUP2"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "SWAP1"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "SSTORE"
										},
										{
											"begin": 1026,
											"end": 1070,
											"name": "POP"
										},
										{
											"begin": 1080,
											"end": 1083,
											"name": "DUP2"
										},
										{
											"begin": 1080,
											"end": 1092,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1080,
											"end": 1092,
											"name": "AND"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1093,
											"end": 1106,
											"name": "DUP3"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "ISZERO"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "MUL"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "DUP4"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "DUP6"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "DUP9"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "DUP9"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "CALL"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "SWAP4"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1080,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 891,
											"end": 1114,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "JUMPDEST"
										},
										{
											"begin": 394,
											"end": 398,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 417,
											"end": 438,
											"name": "SELFBALANCE"
										},
										{
											"begin": 410,
											"end": 438,
											"name": "SWAP1"
										},
										{
											"begin": 410,
											"end": 438,
											"name": "POP"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "SWAP1"
										},
										{
											"begin": 352,
											"end": 445,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "JUMPDEST"
										},
										{
											"begin": 541,
											"end": 550,
											"name": "CALLVALUE"
										},
										{
											"begin": 497,
											"end": 512,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "DUP1"
										},
										{
											"begin": 513,
											"end": 523,
											"name": "CALLER"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "AND"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "MSTORE"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 524,
											"name": "KECCAK256"
										},
										{
											"begin": 497,
											"end": 537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 537,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "DUP3"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "SLOAD"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "ADD"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "SWAP3"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "DUP2"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "SWAP1"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "SSTORE"
										},
										{
											"begin": 497,
											"end": 550,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 582,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 560,
											"end": 582,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 560,
											"end": 582,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 582,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 560,
											"end": 582,
											"name": "JUMPDEST"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "MLOAD"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "ADD"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "MSTORE"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "CALLVALUE"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "MSTORE"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "ADD"
										},
										{
											"begin": 604,
											"end": 607,
											"name": "TIMESTAMP"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "DUP2"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "MSTORE"
										},
										{
											"begin": 585,
											"end": 608,
											"name": "POP"
										},
										{
											"begin": 560,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 560,
											"end": 608,
											"name": "POP"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "POP"
										},
										{
											"begin": 451,
											"end": 624,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "MSTORE"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "KECCAK256"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP2"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SLOAD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "ADD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SLOAD"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "SWAP1"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "POP"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "DUP3"
										},
										{
											"begin": 295,
											"end": 345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 765,
											"name": "DUP1"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "DUP1"
										},
										{
											"begin": 729,
											"end": 739,
											"name": "CALLER"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "MSTORE"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "MSTORE"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 740,
											"name": "KECCAK256"
										},
										{
											"begin": 713,
											"end": 753,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 753,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 753,
											"name": "SLOAD"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "LT"
										},
										{
											"begin": 713,
											"end": 765,
											"name": "ISZERO"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "JUMPI"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "MLOAD"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP3"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "SUB"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP3"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "10"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "6E6F7420656E6F7567682066756E647300000000000000000000000000000000"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP2"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "MSTORE"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "ADD"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "SWAP2"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "POP"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "MLOAD"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "DUP1"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "SWAP2"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "SUB"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "SWAP1"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "REVERT"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 705,
											"end": 786,
											"name": "JUMPDEST"
										},
										{
											"begin": 840,
											"end": 847,
											"name": "DUP1"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "DUP1"
										},
										{
											"begin": 812,
											"end": 822,
											"name": "CALLER"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "AND"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "AND"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "ADD"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "SWAP1"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "MSTORE"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "ADD"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 823,
											"name": "KECCAK256"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "ADD"
										},
										{
											"begin": 796,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "DUP3"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "DUP3"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "SLOAD"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "SUB"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "SWAP3"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "POP"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "POP"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "DUP2"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "SWAP1"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "SSTORE"
										},
										{
											"begin": 796,
											"end": 847,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 860,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 857,
											"end": 869,
											"name": "AND"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP3"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "ISZERO"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "MUL"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "SWAP1"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "DUP4"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "SUB"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "DUP6"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "DUP9"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "DUP9"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "CALL"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "SWAP4"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 857,
											"end": 878,
											"name": "POP"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "POP"
										},
										{
											"begin": 630,
											"end": 885,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMPDEST"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "MLOAD"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "ADD"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP2"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "ADD"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "DUP2"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "MSTORE"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "POP"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "SWAP1"
										},
										{
											"begin": 59,
											"end": 1116,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceReceived(address)": "d18a42e1",
							"getBalance()": "12065fe0",
							"sendMoney()": "cbedbf5a",
							"withdrawAllMoney(address)": "0adec93c",
							"withdrawMoney(address,uint256)": "f274c897"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceReceived\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numPayments\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"sendMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawAllMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"MappingsStructExample.sol\":\"MappingsStructExample\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"MappingsStructExample.sol\":{\"keccak256\":\"0x9a923a14e764d26598b0a6c7ccd2c6ca7ead89beab266639b2907c3fbd934a72\",\"urls\":[\"bzz-raw://0d39963c57da1ae08090278fe17d4eddfa916db0cd27fd105d9ac329ca38f415\",\"dweb:/ipfs/QmdKGKEr5RHTdHL8rMYbHsPHjN4ST3UtwC5ZWzTmgeFQn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "MappingsStructExample.sol:MappingsStructExample",
								"label": "balanceReceived",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Balance)15_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Balance)15_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MappingsStructExample.Balance)",
								"numberOfBytes": "32",
								"value": "t_struct(Balance)15_storage"
							},
							"t_mapping(t_uint256,t_struct(Payment)6_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MappingsStructExample.Payment)",
								"numberOfBytes": "32",
								"value": "t_struct(Payment)6_storage"
							},
							"t_struct(Balance)15_storage": {
								"encoding": "inplace",
								"label": "struct MappingsStructExample.Balance",
								"members": [
									{
										"astId": 8,
										"contract": "MappingsStructExample.sol:MappingsStructExample",
										"label": "totalBalance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "MappingsStructExample.sol:MappingsStructExample",
										"label": "numPayments",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 14,
										"contract": "MappingsStructExample.sol:MappingsStructExample",
										"label": "payments",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_uint256,t_struct(Payment)6_storage)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Payment)6_storage": {
								"encoding": "inplace",
								"label": "struct MappingsStructExample.Payment",
								"members": [
									{
										"astId": 3,
										"contract": "MappingsStructExample.sol:MappingsStructExample",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 5,
										"contract": "MappingsStructExample.sol:MappingsStructExample",
										"label": "timestamps",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "MappingsStructExample.sol:26:9: Warning: Unused local variable.\n        Payment memory payment = Payment(msg.value, now);\n        ^--------------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 582,
					"file": "MappingsStructExample.sol",
					"start": 560
				},
				"type": "Warning"
			}
		],
		"sources": {
			"MappingsStructExample.sol": {
				"ast": {
					"absolutePath": "MappingsStructExample.sol",
					"exportedSymbols": {
						"MappingsStructExample": [
							113
						]
					},
					"id": 114,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "MappingsStructExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MappingsStructExample.Payment",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "122:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "122:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "timestamps",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "143:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "143:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Payment",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "97:68:0",
									"visibility": "public"
								},
								{
									"canonicalName": "MappingsStructExample.Balance",
									"id": 15,
									"members": [
										{
											"constant": false,
											"id": 8,
											"name": "totalBalance",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "196:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "196:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"name": "numPayments",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "223:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "223:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 14,
											"name": "payments",
											"nodeType": "VariableDeclaration",
											"scope": 15,
											"src": "249:33:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$6_storage_$",
												"typeString": "mapping(uint256 => struct MappingsStructExample.Payment)"
											},
											"typeName": {
												"id": 13,
												"keyType": {
													"id": 11,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "249:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Payment_$6_storage_$",
													"typeString": "mapping(uint256 => struct MappingsStructExample.Payment)"
												},
												"valueType": {
													"contractScope": null,
													"id": 12,
													"name": "Payment",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 6,
													"src": "265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$6_storage_ptr",
														"typeString": "struct MappingsStructExample.Payment"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Balance",
									"nodeType": "StructDefinition",
									"scope": 113,
									"src": "171:118:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "balanceReceived",
									"nodeType": "VariableDeclaration",
									"scope": 113,
									"src": "295:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
										"typeString": "mapping(address => struct MappingsStructExample.Balance)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "295:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
											"typeString": "mapping(address => struct MappingsStructExample.Balance)"
										},
										"valueType": {
											"contractScope": null,
											"id": 17,
											"name": "Balance",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 15,
											"src": "314:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Balance_$15_storage_ptr",
												"typeString": "struct MappingsStructExample.Balance"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 29,
										"nodeType": "Block",
										"src": "400:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 25,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "425:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MappingsStructExample_$113",
																	"typeString": "contract MappingsStructExample"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MappingsStructExample_$113",
																	"typeString": "contract MappingsStructExample"
																}
															],
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "417:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "417:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 23,
												"id": 28,
												"nodeType": "Return",
												"src": "410:28:0"
											}
										]
									},
									"documentation": null,
									"id": 30,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "394:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "393:6:0"
									},
									"scope": 113,
									"src": "352:93:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "487:137:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "balanceReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "497:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
																	"typeString": "mapping(address => struct MappingsStructExample.Balance storage ref)"
																}
															},
															"id": 36,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 34,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "513:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "513:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "497:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$15_storage",
																"typeString": "struct MappingsStructExample.Balance storage ref"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "497:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 38,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "541:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "541:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "497:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "497:53:0"
											},
											{
												"assignments": [
													43
												],
												"declarations": [
													{
														"constant": false,
														"id": 43,
														"name": "payment",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "560:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Payment_$6_memory_ptr",
															"typeString": "struct MappingsStructExample.Payment"
														},
														"typeName": {
															"contractScope": null,
															"id": 42,
															"name": "Payment",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 6,
															"src": "560:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Payment_$6_storage_ptr",
																"typeString": "struct MappingsStructExample.Payment"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 45,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "593:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "593:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 47,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "604:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 44,
														"name": "Payment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 6,
														"src": "585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Payment_$6_storage_ptr_$",
															"typeString": "type(struct MappingsStructExample.Payment storage pointer)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Payment_$6_memory",
														"typeString": "struct MappingsStructExample.Payment memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "560:48:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "487:0:0"
									},
									"scope": 113,
									"src": "451:173:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "695:190:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 59,
																		"name": "balanceReceived",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "713:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
																			"typeString": "mapping(address => struct MappingsStructExample.Balance storage ref)"
																		}
																	},
																	"id": 62,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 60,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 128,
																			"src": "729:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 61,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "729:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "713:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Balance_$15_storage",
																		"typeString": "struct MappingsStructExample.Balance storage ref"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "totalBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "713:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 64,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 55,
																"src": "758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "713:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6e6f7420656e6f7567682066756e6473",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "767:18:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															},
															"value": "not enough funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d2692380d98a3c07546c5d0e79194f9a495c13d98a029a34a4b5af7cae785b67",
																"typeString": "literal_string \"not enough funds\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															131,
															132
														],
														"referencedDeclaration": 132,
														"src": "705:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "705:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "705:81:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 69,
																"name": "balanceReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "796:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
																	"typeString": "mapping(address => struct MappingsStructExample.Balance storage ref)"
																}
															},
															"id": 72,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 70,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "812:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "812:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "796:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$15_storage",
																"typeString": "struct MappingsStructExample.Balance storage ref"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "796:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 74,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "796:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "796:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 80,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 77,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "857:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "857:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "857:21:0"
											}
										]
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "653:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "653:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "674:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "674:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "652:35:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "695:0:0"
									},
									"scope": 113,
									"src": "630:255:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "945:169:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"name": "balanceToSend",
														"nodeType": "VariableDeclaration",
														"scope": 111,
														"src": "955:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 89,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "955:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 91,
															"name": "balanceReceived",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "976:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
																"typeString": "mapping(address => struct MappingsStructExample.Balance storage ref)"
															}
														},
														"id": 94,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 92,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "992:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "992:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "976:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Balance_$15_storage",
															"typeString": "struct MappingsStructExample.Balance storage ref"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "totalBalance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 8,
													"src": "976:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "955:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "balanceReceived",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1026:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Balance_$15_storage_$",
																	"typeString": "mapping(address => struct MappingsStructExample.Balance storage ref)"
																}
															},
															"id": 100,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 98,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1042:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1042:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1026:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Balance_$15_storage",
																"typeString": "struct MappingsStructExample.Balance storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "1026:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1069:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1026:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1026:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 108,
															"name": "balanceToSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1093:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 105,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1080:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1080:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1080:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1080:27:0"
											}
										]
									},
									"documentation": null,
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAllMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "917:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "916:21:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "945:0:0"
									},
									"scope": 113,
									"src": "891:223:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 114,
							"src": "59:1057:0"
						}
					],
					"src": "33:1084:0"
				},
				"id": 0
			}
		}
	}
}